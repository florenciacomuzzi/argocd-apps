stages:
  - lint
  - validate
  - policy
  - compare

image: alpine:3.19

variables:
  KUSTOMIZE_VERSION: "5.2.1"
  KUBECONFORM_VERSION: "0.6.4"
  KUBE_SCORE_VERSION: "1.17.0"

before_script:
  - apk add --no-cache curl bash python3 py3-pip jq
  # Install kustomize
  - curl -sLo /usr/local/bin/kustomize "https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize/v${KUSTOMIZE_VERSION}/kustomize_v${KUSTOMIZE_VERSION}_linux_amd64"
  - chmod +x /usr/local/bin/kustomize
  # Install kubeconform
  - curl -sLo /usr/local/bin/kubeconform "https://github.com/yannh/kubeconform/releases/download/v${KUBECONFORM_VERSION}/kubeconform-linux-amd64"
  - chmod +x /usr/local/bin/kubeconform
  # Install kube-score
  - curl -sLo /usr/local/bin/kube-score "https://github.com/zegl/kube-score/releases/download/v${KUBE_SCORE_VERSION}/kube-score_${KUBE_SCORE_VERSION}_linux_amd64"
  - chmod +x /usr/local/bin/kube-score
  # Install Python deps for scripts
  - pip3 install --no-cache-dir pyyaml pathspec yamllint

yaml-lint:
  stage: lint
  script:
    - yamllint -s .

single-doc-check:
  stage: lint
  image: mikefarah/yq:4
  script: |
    set -eo pipefail
    failed=0
    for f in $(git ls-files '*.y*ml'); do
      if grep -qE '^---' "$f"; then
        echo "WARNING: $f contains multiple YAML documents" >&2
        failed=1
      fi
    done
    exit $failed

kustomize-build-dev:
  stage: validate
  script:
    - kustomize build overlays/dev | kubeconform -strict -summary

kustomize-build-prod:
  stage: validate
  script:
    - kustomize build overlays/prod | kubeconform -strict -summary

kube-score:
  stage: policy
  script:
    - kustomize build overlays/dev > /tmp/dev.yaml
    - kube-score score /tmp/dev.yaml --output-format ci

compare-argocd:
  stage: compare
  script:
    - python3 scripts/compare_dirs.py /Users/fcomuzzi/Documents/repos/blueberry/argocd/ .
  allow_failure: true  # treat as warning for now 